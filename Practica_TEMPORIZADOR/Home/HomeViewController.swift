//
//  HomeViewController.swift
//  Practica_TEMPORIZADOR
//
//  Created Administrator on 05/07/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

//class HomeViewController: UIViewController {
//
//    //MARK: - Protocol Properties
//	var presenter: HomePresenterProtocol?
//
//    //MARK: - Properties
//
//        var timer = Timer()
//        var timerMinuto = Timer()
//        var seconds = 59
//        var minuto = 59
//
//    private var labelTemporizador: UILabel = {
//        let label = UILabel()
//        label.text = "59"
//        label.textColor = .white
//        label.font = UIFont(name: "Arial Rounded MT Bold", size: 70)
//        label.textAlignment = .center
//        return label
//    }()
//
//    private var labelTemporizadorMinuto: UILabel = {
//        let label = UILabel()
//        label.text = "59"
//        label.textColor = .white
//        label.font = UIFont(name: "Arial Rounded MT Bold", size: 70)
//        label.textAlignment = .center
//        return label
//    }()
//
//    private var buttonStarStop: UIButton = {
//        let button = UIButton()
//        button.layer.backgroundColor = UIColor.systemOrange.cgColor
//        button.layer.cornerRadius = 20
//        button.setTitle("Iniciar", for: .normal)
//        button.setTitleColor(UIColor.black, for: .normal)
//        button.addTarget(self, action: #selector(starButton), for: .touchUpInside)
//        return button
//    }()
//
//    private var buttonPausa: UIButton = {
//        let button = UIButton()
//        button.layer.backgroundColor = UIColor.systemOrange.cgColor
//        button.layer.cornerRadius = 20
//        button.setTitle("Pausa", for: .normal)
//        button.setTitleColor(UIColor.black, for: .normal)
//        button.addTarget(self, action: #selector(pauseButton), for: .touchUpInside)
//        return button
//    }()
//
//    private var buttonReset: UIButton = {
//        let button = UIButton()
//        button.layer.backgroundColor = UIColor.systemOrange.cgColor
//        button.layer.cornerRadius = 20
//        button.setTitle("Reset", for: .normal)
//        button.setTitleColor(UIColor.black, for: .normal)
//        button.addTarget(self, action: #selector(resetButton), for: .touchUpInside)
//        return button
//    }()
//
//    private var buttonMas: UIButton = {
//        let button = UIButton()
//        button.layer.backgroundColor = UIColor.systemOrange.cgColor
//        button.layer.cornerRadius = 20
//        button.setTitle("+5", for: .normal)
//        button.setTitleColor(UIColor.black, for: .normal)
//        button.addTarget(self, action: #selector(addSecond), for: .touchUpInside)
//        return button
//    }()
//
//    private var buttonMenos: UIButton = {
//        let button = UIButton()
//        button.layer.backgroundColor = UIColor.systemOrange.cgColor
//        button.layer.cornerRadius = 20
//        button.setTitle("-5", for: .normal)
//        button.setTitleColor(UIColor.black, for: .normal)
//        button.addTarget(self, action: #selector(minusSecond), for: .touchUpInside)
//        return button
//    }()
//
//    //MARK: - Life Cycle
//	override func viewDidLoad() {
//        super.viewDidLoad()
//        view.backgroundColor = .black
//        setupUI()
//    }
//
//    //MARK: - Methods
//
//    func setupUI(){
//
//        var buttonDeteail = UIBarButtonItem(image: UIImage(systemName: "list.bullet"), style: .done, target: self, action: #selector(Detalles))
//        navigationItem.rightBarButtonItem = buttonDeteail
//
//        navigationController?.navigationBar.tintColor = .white
//        view.addSubview(labelTemporizador)
////        labelTemporizador.addAnchorsAndCenter(centerX: true, centerY: false, width:50, height: 50, left: nil, top: 150, right: nil, bottom: nil)
//        labelTemporizador.addAnchorsAndSize(width: 85, height: 70, left: nil, top: 150, right: 20, bottom: nil)
//
//        view.addSubview(labelTemporizadorMinuto)
//        labelTemporizadorMinuto.addAnchorsAndSize(width: 85, height: 70, left: nil, top: 150, right: 10, bottom: nil, withAnchor: .right,  relativeToView: labelTemporizador)
//
//        view.addSubview(buttonStarStop)
//        buttonStarStop.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 100, right: nil, bottom: nil, withAnchor: .top, relativeToView: labelTemporizador)
//
//        view.addSubview(buttonPausa)
//        buttonPausa.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: buttonStarStop)
//
//        view.addSubview(buttonReset)
//        buttonReset.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: buttonPausa)
//
//        view.addSubview(buttonMas)
//        buttonMas.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: buttonReset)
//
//        view.addSubview(buttonMenos)
//        buttonMenos.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: buttonMas)
//
//    }
//}
//
////MARK: - View Methods
//extension HomeViewController: HomeViewProtocol {
//
//}
//
////MARK: - Private functions
//
//extension HomeViewController {
//
//    @objc func starButton(){
//        print("startButton")
////        make sure there arent any others timers running
//        timer.invalidate()
////        create the timer
//        timer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(HomeViewController.timerClass), userInfo: nil, repeats: true)
//        timerMinuto = Timer.scheduledTimer(timeInterval: 59, target: self, selector: #selector(HomeViewController.minutoClass), userInfo: nil, repeats: true)
//    }
//
//    @objc func pauseButton(){
//        print("pausebutton")
//        timer.invalidate()
//    }
//
//    @objc func resetButton(){
//        print("restButton")
//        timer.invalidate()
//        timerMinuto.invalidate()
//        seconds = 59
//        minuto = 59
//        labelTemporizador.text = String(seconds)
//        labelTemporizadorMinuto.text = String(minuto)
//    }
//
//    @objc func addSecond(){
//        print("anadir 5 segundos")
//        seconds = seconds + 5
//        labelTemporizador.text = String(seconds)
//    }
//
//    @objc func minusSecond(){
//        print("restar 5 segundos")
//        seconds = seconds - 5
//        labelTemporizador.text = String(seconds)
//    }
//
//    @objc func timerClass(){
//        print("timerclass")
//        seconds -= 1
//        labelTemporizador.text = String(seconds)
//
//        if(seconds == 0){
//            timer.invalidate()
//        }
//
//    }
//
//    @objc func minutoClass(){
//        print("timerclassMinuto")
//        minuto -= 1
//        labelTemporizadorMinuto.text = String(minuto)
//
//        if(minuto == 0){
//            timer.invalidate()
//        }
//    }
//
//    @objc func Detalles(){
//
//    }
//
//
//}

class HomeViewController: UIViewController {

    //MARK: - Protocol Properties
    var presenter: HomePresenterProtocol?

    //MARK: - Properties
       
    var timer: Timer = Timer()
    var count: Int = 120
    var timerCounting: Bool = false
    
    private var labelTemporizador: UILabel = {
        let label = UILabel()
        label.text = "00:01:59"
        label.textColor = .white
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 70)
        label.textAlignment = .center
        return label
    }()
    
    private var startStopButton: UIButton = {
        let button = UIButton()
        button.layer.backgroundColor = UIColor.systemOrange.cgColor
        button.layer.cornerRadius = 20
        button.setTitle("INICIAR", for: .normal)
        button.setTitleColor(UIColor.white, for: .normal)
        button.addTarget(self, action: #selector(startStopTapped), for: .touchUpInside)
        return button
    }()
    
    private var buttonReset: UIButton = {
        let button = UIButton()
        button.layer.backgroundColor = UIColor.systemOrange.cgColor
        button.layer.cornerRadius = 20
        button.setTitle("RESTABLECER", for: .normal)
        button.setTitleColor(UIColor.white, for: .normal)
        button.addTarget(self, action: #selector(resetTapped), for: .touchUpInside)
        return button
    }()
    
    //MARK: - Life Cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .black
        setupUI()
    }
    
    //MARK: - Methods
    
    func setupUI(){
//
//        var buttonDeteail = UIBarButtonItem(image: UIImage(systemName: "list.bullet"), style: .done, target: self, action: #selector(Detalles))
//        navigationItem.rightBarButtonItem = buttonDeteail
//        navigationItem.rightBarButtonItem = UIBarButtonItem(image: UIImage(systemName: "list.dash"), style: .done, target: self, action: #selector(Detalles))
        navigationController?.navigationBar.tintColor = .white
        view.addSubview(labelTemporizador)
        labelTemporizador.addAnchorsAndCenter(centerX: true, centerY: false, width:width, height: 70, left: nil, top: 200, right: nil, bottom: nil)
//        labelTemporizador.addAnchorsAndSize(width: width, height: 70, left: nil, top: 150, right: 20, bottom: nil)
        
        view.addSubview(startStopButton)
        startStopButton.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 100, right: nil, bottom: nil, withAnchor: .top, relativeToView: labelTemporizador)
        
        view.addSubview(buttonReset)
        buttonReset.addAnchorsAndCenter(centerX: true, centerY: false, width: 300, height: 50, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: startStopButton)
        
//        buttonDeteail.menu = addMenuItems()
        
    }
}

//MARK: - View Methods
extension HomeViewController: HomeViewProtocol {
    
    func secondsToHoursMinutesSeconds(seconds: Int) -> (Int, Int, Int) {
        return ((seconds / 3600), ((seconds % 3600) / 60), ((seconds % 3600) % 60))
    }
    
//    func addMenuItems() -> UIMenu {
//        let menuItmes = UIMenu(title: "::", options: .displayInline, children: [
//            UIAction(title: "Configuracion", handler: { (_) in print("menu configuracion")}),
//            UIAction(title: "Comentarios", handler: { (_) in print("menu comentarios")}),
//        ])
//
//        return menuItmes
//    }
    
}

//MARK: - Private functions

extension HomeViewController {
     
    @objc func startStopTapped(){
        if(timerCounting){
            timerCounting = false
            timer.invalidate()
            startStopButton.setTitle("RENUDAR", for: .normal)
            startStopButton.layer.backgroundColor = UIColor.systemGreen.cgColor
            startStopButton.setTitleColor(UIColor.white, for: .normal)
        }
        else {
                timerCounting = true
                startStopButton.setTitle("PAUSAR", for: .normal)
                startStopButton.setTitleColor(UIColor.white, for: .normal)
                startStopButton.layer.backgroundColor = UIColor.systemRed.cgColor
                timer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(timerCounter), userInfo: nil, repeats: true)
        }
    
    }
     
    @objc func resetTapped(){
        print("restButton")
        let alert = UIAlertController(title: "Reset Timer", message: "Are you sure you would like to reset the timer", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: { (_) in }))
        alert.addAction(UIAlertAction(title: "YES", style: .default, handler: { (_) in
            self.count = 120
            self.timer.invalidate()
            self.labelTemporizador.text = self.makeTimeString(hours: 0, minutes: 1, seconds: 59)
            self.startStopButton.setTitleColor(UIColor.white, for: .normal)
            print(self.makeTimeString(hours: 0, minutes: 0, seconds: 0))
            self.startStopButton.setTitle("INICIAR", for: .normal)
            self.startStopButton.layer.backgroundColor = UIColor.systemOrange.cgColor
        }))
        self.present(alert, animated: true, completion: nil)
        
 
    }
    
    @objc func timerCounter() -> Void {
        count = count - 1
        let time = secondsToHoursMinutesSeconds(seconds: count)
        let timeString = makeTimeString(hours: time.0, minutes: time.1 , seconds: time.2)
        labelTemporizador.text = timeString
        
        if(count == 0){
                   timer.invalidate()
               }
    }
    
    func makeTimeString(hours: Int, minutes: Int, seconds: Int) -> String {
        
        var timeString = ""
        timeString += String(format: "%02d", hours)
        timeString += ":"
        timeString += String(format: "%02d", minutes)
        timeString += ":"
        timeString += String(format: "%02d", seconds)
        return timeString
    }
    
    @objc func Detalles(){
        
    }
    
}
