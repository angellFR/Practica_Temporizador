//
//  ConfigurationViewController.swift
//  Practica_TEMPORIZADOR
//
//  Created Administrator on 06/07/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import AVKit

class ConfigurationViewController: UIViewController {

    //MARK: - Protocol Properties
	var presenter: ConfigurationPresenterProtocol?

    //MARK: - Properties
    let defaults = UserDefaults.standard
    var validationVS = false
    var validationSV = false
    var validationS = false
    var validationBmario = false
    var validationTono = false
    var player: AVAudioPlayer?
    
    
    private var labelVibrarSonido: UILabel = {
        let label = UILabel()
        label.text = "Vibrar y Sonido"
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 20)
        return label
    }()
    
    private var buttonVibrarSonito: UIButton = {
        let button = UIButton()
        button.setImage(UIImage(named: "checbox"), for: .normal)
        button.addTarget(self, action: #selector(vibrarSonido), for: .touchUpInside)
        return button
    }()
    
    private var buttonVibrar: UIButton = {
        let button = UIButton()
        button.setImage(UIImage(named: "checbox"), for: .normal)
        button.addTarget(self, action: #selector(solovibrar), for: .touchUpInside)
        return button
    }()
    
    private var labelVibrar: UILabel = {
        let label = UILabel()
        label.text = "Solo Vibrar"
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 20)
        return label
    }()
    
    private var buttonSonido: UIButton = {
        let button = UIButton()
        button.setImage(UIImage(named: "checbox"), for: .normal)
        button.addTarget(self, action: #selector(soloSonido), for: .touchUpInside)
        return button
    }()
    
    private var labelSonido: UILabel = {
        let label = UILabel()
        label.text = "Solo Sonido"
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 20)
        return label
    }()
    
    private var labelPreferenciaSonido: UILabel = {
        let label = UILabel()
        label.text = "Sonidos:"
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 20)
        return label
    }()
    
    private var labelTono: UILabel = {
        let label = UILabel()
        label.text = "Tono"
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 20)
        return label
    }()
    
    private var buttonTono: UIButton = {
        let button = UIButton()
        button.setImage(UIImage(named: "checbox"), for: .normal)
        button.addTarget(self, action: #selector(tono), for: .touchUpInside)
        return button
    }()
    
    private var labelMarioBros: UILabel = {
        let label = UILabel()
        label.text = "MarioBros"
        label.font = UIFont(name: "Arial Rounded MT Bold", size: 20)
        return label
    }()
    
    private var buttonMarioBros: UIButton = {
        let button = UIButton()
        button.setImage(UIImage(named: "checbox"), for: .normal)
        button.addTarget(self, action: #selector(marioBros), for: .touchUpInside)
        return button
    }()
    
    
    //MARK: - Life Cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        title = "Configuration"
        view.backgroundColor = .systemOrange
        setupUI()
        preference()
    }
    
    //MARK: - Methods
    func setupUI(){
        view.addSubview(buttonVibrarSonito)
        buttonVibrarSonito.addAnchorsAndSize(width: 50, height: 50, left: 35, top: 100, right: nil, bottom: nil)
        
        view.addSubview(labelVibrarSonido)
        labelVibrarSonido.addAnchorsAndSize(width: nil, height: nil, left: 30, top: 110, right: nil, bottom: nil, withAnchor: .left, relativeToView: buttonVibrarSonito)
        
        view.addSubview(buttonVibrar)
        buttonVibrar.addAnchorsAndSize(width: 50, height: 50, left: 35, top: 20, right: nil, bottom: nil,withAnchor: .top, relativeToView: buttonVibrarSonito)
        
        view.addSubview(labelVibrar)
        labelVibrar.addAnchorsAndSize(width: nil, height: nil, left: 115, top: 50, right: nil, bottom: nil,withAnchor: .top ,relativeToView: labelVibrarSonido)
        
        view.addSubview(buttonSonido)
        buttonSonido.addAnchorsAndSize(width: 50, height: 50, left: 35, top: 20, right: nil, bottom: nil,withAnchor: .top, relativeToView: buttonVibrar)
        
        view.addSubview(labelSonido)
        labelSonido.addAnchorsAndSize(width: nil, height: nil, left: 115, top: 50, right: nil, bottom: nil, withAnchor: .top, relativeToView: labelVibrar)
        
        view.addSubview(labelPreferenciaSonido)
        labelPreferenciaSonido.addAnchorsAndSize(width: nil, height: nil, left: 35, top: 45, right: nil, bottom: nil,withAnchor: .top,relativeToView: labelSonido)
        
        view.addSubview(buttonMarioBros)
        buttonMarioBros.addAnchorsAndSize(width: 50, height: 50, left: 35, top: 20, right: nil, bottom: nil,withAnchor: .top,relativeToView: labelPreferenciaSonido)
        
        view.addSubview(labelMarioBros)
        labelMarioBros.addAnchorsAndSize(width: nil, height: nil, left: 115, top: 30, right: nil, bottom: nil,withAnchor: .top,relativeToView: labelPreferenciaSonido)
        
        view.addSubview(buttonTono)
        buttonTono.addAnchorsAndSize(width: 50, height: 50, left: 35, top: 20, right: nil, bottom: nil,withAnchor: .top, relativeToView: buttonMarioBros)
        
        view.addSubview(labelTono)
        labelTono.addAnchorsAndSize(width: nil, height: nil, left: 115, top: 50, right: nil, bottom: nil, withAnchor: .top, relativeToView:labelMarioBros)
        
        
        
    }
}

//MARK: - View Methods
extension ConfigurationViewController: ConfigurationViewProtocol {

    
    
}

//MARK: - Private functions
extension ConfigurationViewController {
    
    @objc func vibrarSonido(){
      
        if validationVS == false {
            buttonVibrarSonito.setImage(UIImage(named: "checboxselec"), for: .normal)
            print("buttonselect")
            validationVS = true
            buttonVibrar.setImage(UIImage(named: "checbox"), for: .normal)
            buttonSonido.setImage(UIImage(named: "checbox"), for: .normal)
            validationS = false
            validationSV = false
            UserDefaults.standard.set("Vibrar y Sonido", forKey: "opciones")
            UserDefaults.standard.synchronize()
        }else{
            buttonVibrarSonito.setImage(UIImage(named: "checbox"), for: .normal)
            print("buttondeselct")
            validationVS = false
            UserDefaults.standard.removeObject(forKey: "opciones")
            UserDefaults.standard.synchronize()
        }
    }

    @objc func solovibrar(){
      print(validationSV)
        if validationSV == false {
            buttonVibrar.setImage(UIImage(named: "checboxselec"), for: .normal)
            print("buttonselect")
            validationSV = true
            buttonSonido.setImage(UIImage(named: "checbox"), for: .normal)
            buttonVibrarSonito.setImage(UIImage(named: "checbox"), for: .normal)
            validationVS = false
            validationS = false
            UserDefaults.standard.set("Solo Vibrar", forKey: "opciones")
            UserDefaults.standard.synchronize()
            buttonMarioBros.setImage(UIImage(named: "checbox"), for: .normal)
            buttonTono.setImage(UIImage(named: "checbox"), for: .normal)
            UserDefaults.standard.removeObject(forKey: "sonido")
            UserDefaults.standard.synchronize()
        
        }else{
            buttonVibrar.setImage(UIImage(named: "checbox"), for: .normal)
            print("buttondeselct")
            validationSV = false
            UserDefaults.standard.removeObject(forKey: "opciones")
            UserDefaults.standard.synchronize()
        }
    }
    
    @objc func soloSonido(){
      
        if validationS == false {
            buttonSonido.setImage(UIImage(named: "checboxselec"), for: .normal)
            print("buttonselect:::::")
            validationS = true
            buttonVibrar.setImage(UIImage(named: "checbox"), for: .normal)
            buttonVibrarSonito.setImage(UIImage(named: "checbox"), for: .normal)
            validationVS = false
            validationSV = false
            UserDefaults.standard.set("Solo Sonido", forKey: "opciones")
            UserDefaults.standard.synchronize()
            
        }else{
            buttonSonido.setImage(UIImage(named: "checbox"), for: .normal)
            print("buttondeselct")
            validationS = false
            UserDefaults.standard.removeObject(forKey: "opciones")
            UserDefaults.standard.synchronize()
        }
    }

    @objc func marioBros(){
        if validationBmario == false {
            buttonMarioBros.setImage(UIImage(named: "checboxselec"), for: .normal)
            print("buttonMarioBros")
            validationBmario = true
            buttonTono.setImage(UIImage(named: "checbox"), for: .normal)
            validationTono = false
            UserDefaults.standard.set("MarioBros", forKey: "sonido")
            UserDefaults.standard.synchronize()
        }else{
            buttonMarioBros.setImage(UIImage(named: "checbox"), for: .normal)
            print("buttondeselct")
            validationBmario = false
            UserDefaults.standard.removeObject(forKey: "sonido")
            UserDefaults.standard.synchronize()
        }
    }
    
    @objc func tono(){
        if validationTono == false {
            buttonTono.setImage(UIImage(named: "checboxselec"), for: .normal)
            print("buttonTono")
            validationTono = true
            buttonMarioBros.setImage(UIImage(named: "checbox"), for: .normal)
            validationBmario = false
            UserDefaults.standard.set("Tono", forKey: "sonido")
            UserDefaults.standard.synchronize()
        }else{
            buttonTono.setImage(UIImage(named: "checbox"), for: .normal)
            print("buttondeselct")
            validationTono = false
            UserDefaults.standard.removeObject(forKey: "sonido")
            UserDefaults.standard.synchronize()
        }
    }
    
    
    
    func preference() {
        if let preference = UserDefaults.standard.string(forKey: "opciones") {
            switch preference {
            case "Vibrar y Sonido":
                print("vibrar y sonido")
                validationVS = true
                buttonVibrarSonito.setImage(UIImage(named: "checboxselec"), for: .normal)
            case "Solo Vibrar" :
                print("solo vibrar")
                validationSV = true
                buttonVibrar.setImage(UIImage(named: "checboxselec"), for: .normal)
            case "Solo Sonido" :
                print("solo sonido")
                validationS = true
                buttonSonido.setImage(UIImage(named: "checboxselec"), for: .normal)
            default:
                print("defauld")
            }
        }
        
        if let preferenceSound = UserDefaults.standard.string(forKey: "sonido"){
            switch preferenceSound {
            case "MarioBros":
                validationBmario = true
                buttonMarioBros.setImage(UIImage(named: "checboxselec"), for: .normal)
            case "Tono":
                validationTono = true
                buttonTono.setImage(UIImage(named: "checboxselec"), for: .normal)
            default:
                print("default")
            }
        }
    }
        
}
